//~~WEBPATH~~/neon-animation/neon-animatable-behavior.html.js
Polymer.NeonAnimatableBehavior={properties:{animationConfig:{type:Object},entryAnimation:{observer:"_entryAnimationChanged",type:String},exitAnimation:{observer:"_exitAnimationChanged",type:String}},_entryAnimationChanged:function(){this.animationConfig=this.animationConfig||{};this.animationConfig.entry="fade-in-animation"!==this.entryAnimation?[{name:"opaque-animation",node:this},{name:this.entryAnimation,node:this}]:[{name:this.entryAnimation,node:this}]},_exitAnimationChanged:function(){this.animationConfig=
this.animationConfig||{};this.animationConfig.exit=[{name:this.exitAnimation,node:this}]},_copyProperties:function(a,b){for(var c in b)a[c]=b[c]},_cloneConfig:function(a){var b={isClone:!0};this._copyProperties(b,a);return b},_getAnimationConfigRecursive:function(a,b,c){if(this.animationConfig)if(this.animationConfig.value&&"function"===typeof this.animationConfig.value)this._warn(this._logf("playAnimation","Please put 'animationConfig' inside of your components 'properties' object instead of outside of it."));
else{var d=a?this.animationConfig[a]:this.animationConfig;Array.isArray(d)||(d=[d]);if(d)for(var e,g=0;e=d[g];g++)if(e.animatable)e.animatable._getAnimationConfigRecursive(e.type||a,b,c);else if(e.id){var h=b[e.id];h?(h.isClone||(b[e.id]=this._cloneConfig(h),h=b[e.id]),this._copyProperties(h,e)):b[e.id]=e}else c.push(e)}},getAnimationConfig:function(a){var b={},c=[];this._getAnimationConfigRecursive(a,b,c);for(var d in b)c.push(b[d]);return c}};
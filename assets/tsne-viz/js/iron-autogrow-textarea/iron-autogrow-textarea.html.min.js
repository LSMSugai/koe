//~~WEBPATH~~/iron-autogrow-textarea/iron-autogrow-textarea.html.js
Polymer({is:"iron-autogrow-textarea",behaviors:[Polymer.IronFormElementBehavior,Polymer.IronValidatableBehavior,Polymer.IronControlState],properties:{bindValue:{observer:"_bindValueChanged",type:String},rows:{type:Number,value:1,observer:"_updateCached"},maxRows:{type:Number,value:0,observer:"_updateCached"},autocomplete:{type:String,value:"off"},autofocus:{type:Boolean,value:!1},inputmode:{type:String},placeholder:{type:String},readonly:{type:String},required:{type:Boolean},minlength:{type:Number},
maxlength:{type:Number}},listeners:{input:"_onInput"},observers:["_onValueChanged(value)"],get textarea(){return this.$.textarea},get selectionStart(){return this.$.textarea.selectionStart},get selectionEnd(){return this.$.textarea.selectionEnd},set selectionStart(a){this.$.textarea.selectionStart=a},set selectionEnd(a){this.$.textarea.selectionEnd=a},attached:function(){navigator.userAgent.match(/iP(?:[oa]d|hone)/)&&(this.$.textarea.style.marginLeft="-3px")},validate:function(){if(!this.required&&
""==this.value)return this.invalid=!1,!0;if(this.hasValidator())var a=Polymer.IronValidatableBehavior.validate.call(this,this.value);else a=this.$.textarea.validity.valid,this.invalid=!a;this.fire("iron-input-validate");return a},_bindValueChanged:function(){var a=this.textarea;a&&(a.value!==this.bindValue&&(a.value=this.bindValue||0===this.bindValue?this.bindValue:""),this.value=this.bindValue,this.$.mirror.innerHTML=this._valueForMirror(),this.fire("bind-value-changed",{value:this.bindValue}))},
_onInput:function(a){this.bindValue=a.path?a.path[0].value:a.target.value},_constrain:function(a){a=a||[""];for(a=0<this.maxRows&&a.length>this.maxRows?a.slice(0,this.maxRows):a.slice(0);0<this.rows&&a.length<this.rows;)a.push("");return a.join("\x3cbr/\x3e")+"\x26#160;"},_valueForMirror:function(){var a=this.textarea;if(a)return this.tokens=a&&a.value?a.value.replace(/&/gm,"\x26amp;").replace(/"/gm,"\x26quot;").replace(/'/gm,"\x26#39;").replace(/</gm,"\x26lt;").replace(/>/gm,"\x26gt;").split("\n"):
[""],this._constrain(this.tokens)},_updateCached:function(){this.$.mirror.innerHTML=this._constrain(this.tokens)},_onValueChanged:function(){this.bindValue=this.value}});
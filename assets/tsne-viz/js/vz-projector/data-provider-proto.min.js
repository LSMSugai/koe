//~~WEBPATH~~/vz-projector/data-provider-proto.js
var ud=function(){function a(a){this.dataProto=a}a.prototype.retrieveRuns=function(a){a(["proto"])};a.prototype.retrieveProjectorConfig=function(a,c){c({modelCheckpointPath:"proto",embeddings:[{tensorName:"proto",tensorShape:this.dataProto.shape,metadataPath:"proto"}]})};a.prototype.retrieveTensor=function(a,c,d){d(this.flatArrayToDataset(this.dataProto.tensor))};a.prototype.retrieveSpriteAndMetadata=function(a,c,d){a=this.dataProto.metadata.columns.map(function(a){return a.name});var b=this.dataProto.shape[0],
g=Array(b);this.dataProto.metadata.columns.forEach(function(a){for(var c=a.numericValues||a.stringValues,d=0;d<b;d++)g[d]=g[d]||{},g[d][a.name]=c[d]});d({stats:qd(a,g),pointsInfo:g})};a.prototype.getBookmarks=function(a,c,d){return d([])};a.prototype.flatArrayToDataset=function(a){var b=[],d=this.dataProto.shape[0],e=this.dataProto.shape[1];if(d*e!==a.length)throw"The shape doesn't match the length of the flattened array";for(var g=0;g<d;g++){var h=g*e;b.push({vector:new Float32Array(a.slice(h,h+
e)),metadata:{},projections:null,index:g})}return new ad(b)};return a}();